import { defineField, defineType } from "sanity";

export const eventType = defineType({
  name: "event",
  title: "Event",
  type: "document",

  // üëâ –∑–∞–≥–æ—Ç–æ–≤–∫–∏ –¥–ª—è –Ω–æ–≤—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
  initialValue: () => {
    const now = new Date();
    const startDemo = new Date(
      now.getFullYear(),
      now.getMonth(),
      now.getDate() + 14,
      19,
      0,
      0
    ).toISOString();

    return {
      featuredOnHome: false,
      timezone: "Europe/Berlin",
      start: startDemo,
      end: null,
      title: {
        ru: "–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è ‚Äî –∫–æ—Ä–æ—Ç–∫–æ –∏ —è—Å–Ω–æ",
        de: "Titel Ihrer Veranstaltung ‚Äì kurz und klar",
      },
      summary: {
        ru:
          "–í –¥–≤—É—Ö-—Ç—Ä—ë—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ —ç—Ç–æ –∑–∞ —Å–æ–±—ã—Ç–∏–µ, –∫–æ–º—É –ø–æ–¥—Ö–æ–¥–∏—Ç –∏ —á–µ–º –ø–æ–ª–µ–∑–Ω–æ. " +
          "–£–∫–∞–∂–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç, –¥–∞—Ç—É/–≤—Ä–µ–º—è –∏ –ø–ª–æ—â–∞–¥–∫—É; –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ ‚Äî –ø—Ä–æ–≥—Ä–∞–º–º—É –∏–ª–∏ –æ–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç. " +
          "–≠—Ç–æ –ø—Ä–∏–º–µ—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç ‚Äî –∑–∞–º–µ–Ω–∏—Ç–µ –µ–≥–æ –Ω–∞ —Å–≤–æ–π.",
        de:
          "Beschreiben Sie in zwei bis drei S√§tzen, worum es geht, f√ºr wen es ist und welchen Nutzen es hat. " +
          "Nennen Sie Format, Datum/Uhrzeit und Location; optional Programm oder Ergebnis. " +
          "Dieser Beispieltext dient nur als Platzhalter ‚Äì ersetzen Sie ihn durch Ihren.",
      },
      venue: {
        name: {
          ru: "–ù–∞–∑–≤–∞–Ω–∏–µ –ø–ª–æ—â–∞–¥–∫–∏ (–±–∞—Ä, –∫–ª—É–±, –≥–∞–ª–µ—Ä–µ—è)",
          de: "Name der Location (Bar, Club, Galerie)",
        },
        city: {
          ru: "–ì–æ—Ä–æ–¥ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è",
          de: "Stadt der Veranstaltung",
        },
        address: {
          ru: "–ê–¥—Ä–µ—Å: —É–ª–∏—Ü–∞ –∏ –¥–æ–º (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)",
          de: "Adresse: Stra√üe und Hausnummer (optional)",
        },
        mapUrl: "",
        website: "",
      },
      image: {
        alt: {
          ru: "–û–±–ª–æ–∂–∫–∞ —Å–æ–±—ã—Ç–∏—è (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é)",
          de: "Titelbild der Veranstaltung (durch eigenes Foto ersetzen)",
        },
      },
      cta: {
        href: "/contact",
        label: { ru: "–ö–æ–Ω—Ç–∞–∫—Ç", de: "Kontakt" },
      },
    };
  },

  // üëâ –ø—Ä–µ–≤—å—é –≤ —Å–ø–∏—Å–∫–µ
  preview: {
    select: {
      titleRu: "title.ru",
      titleDe: "title.de",
      start: "start",
      cityRu: "venue.city.ru",
      cityDe: "venue.city.de",
    },
    prepare({ titleRu, titleDe, start, cityRu, cityDe }) {
      const date = start
        ? new Date(start).toLocaleString("de-DE", {
            dateStyle: "medium",
            timeStyle: "short",
          })
        : "";
      const title = titleDe || titleRu || "Event";
      const subtitle = [date, cityDe || cityRu].filter(Boolean).join(" ‚Ä¢ ");
      return { title, subtitle };
    },
  },

  fields: [
    defineField({
      name: "featuredOnHome",
      title: "–ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞ –≥–ª–∞–≤–Ω–æ–π / Auf der Startseite zeigen",
      type: "boolean",
      initialValue: false,
      description:
        "–û—Ç–º–µ—Ç—å—Ç–µ, —á—Ç–æ–±—ã –∏–º–µ–Ω–Ω–æ —ç—Ç–æ —Å–æ–±—ã—Ç–∏–µ –ø–æ–∫–∞–∑—ã–≤–∞–ª–æ—Å—å –≤ –±–ª–æ–∫–µ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π (–≤—ã–±–æ—Ä –≤—Ä—É—á–Ω—É—é).",
    }),

    defineField({
      name: "title",
      title: "Title",
      type: "object",
      description: "–ö–æ—Ä–æ—Ç–∫–∏–π –∏ –ø–æ–Ω—è—Ç–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–æ–±—ã—Ç–∏—è.",
      fields: [
        { name: "ru", title: "Russian", type: "string", validation: (r) => r.required() },
        { name: "de", title: "German", type: "string", validation: (r) => r.required() },
      ],
    }),

    defineField({
      name: "start",
      title: "Start (datetime, ISO)",
      type: "datetime",
      description: "–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ (–ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–∞–π–º-–∑–æ–Ω—ã).",
      validation: (r) => r.required(),
    }),

    defineField({
      name: "end",
      title: "End (datetime, ISO)",
      type: "datetime",
      description: "–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ. –ï—Å–ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ ‚Äî –ø–æ–∫–∞–∂–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª.",
    }),

    defineField({
      name: "timezone",
      title: "Timezone (IANA)",
      type: "string",
      initialValue: "Europe/Berlin",
      options: {
        list: [
          { title: "Europe/Berlin", value: "Europe/Berlin" },
          { title: "Europe/Moscow", value: "Europe/Moscow" },
          { title: "UTC", value: "UTC" },
        ],
        layout: "dropdown",
      },
      description: "–¢–∞–π–º-–∑–æ–Ω–∞ —Å–æ–±—ã—Ç–∏—è (IANA).",
    }),

    // –ú–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è
    defineField({
      name: "venue",
      title: "Venue",
      type: "object",
      description: "–ü–ª–æ—â–∞–¥–∫–∞/–º–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è.",
      fields: [
        {
          name: "name",
          title: "Name",
          type: "object",
          description: "–ù–∞–∑–≤–∞–Ω–∏–µ –ø–ª–æ—â–∞–¥–∫–∏ (–±–∞—Ä, –∫–ª—É–±, –≥–∞–ª–µ—Ä–µ—è).",
          fields: [
            { name: "ru", title: "Russian", type: "string" },
            { name: "de", title: "German", type: "string" },
          ],
        },
        {
          name: "city",
          title: "City (multilingual)",
          type: "object",
          description: "–ì–æ—Ä–æ–¥ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ ‚Äî –≤ –¥–≤—É—Ö —è–∑—ã–∫–∞—Ö).",
          fields: [
            { name: "ru", title: "–†—É—Å—Å–∫–∏–π", type: "string" },
            { name: "de", title: "Deutsch", type: "string" },
          ],
        },
        {
          name: "address",
          title: "Address (optional)",
          type: "object",
          description: "–£–ª–∏—Ü–∞, –¥–æ–º, –æ—Ä–∏–µ–Ω—Ç–∏—Ä—ã ‚Äî –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ.",
          fields: [
            { name: "ru", title: "Russian", type: "string" },
            { name: "de", title: "German", type: "string" },
          ],
        },
        { name: "mapUrl", title: "Map URL (Google/Apple)", type: "url" },
        { name: "website", title: "Venue website", type: "url" },
      ],
    }),

    // –ö–∞—Ä—Ç–∏–Ω–∫–∞
    defineField({
      name: "image",
      title: "Image",
      type: "image",
      options: { hotspot: true },
      description: "–û–±–ª–æ–∂–∫–∞ —Å–æ–±—ã—Ç–∏—è. –õ—É—á—à–µ 1600√ó900+, JPG/WebP.",
      fields: [
        {
          name: "alt",
          type: "object",
          title: "Alternative text",
          fields: [
            { name: "ru", title: "Russian", type: "string" },
            { name: "de", title: "German", type: "string" },
          ],
        },
      ],
    }),

    // –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
    defineField({
      name: "summary",
      title: "Summary",
      type: "object",
      description: "2‚Äì3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è: –∫–æ–Ω—Ç–µ–∫—Å—Ç, –ø–æ–ª—å–∑–∞, —Ä–µ–∑—É–ª—å—Ç–∞—Ç.",
      fields: [
        { name: "ru", title: "Russian", type: "text" },
        { name: "de", title: "German", type: "text" },
      ],
    }),

    // –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
    defineField({
      name: "content",
      title: "Content",
      type: "object",
      fields: [
        { name: "ru", title: "Russian", type: "blockContent" },
        { name: "de", title: "German", type: "blockContent" },
      ],
    }),

    // CTA (–æ–¥–∏–Ω —Ä–∞–∑, –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞)
    defineField({
      name: "cta",
      title: "CTA (button)",
      type: "object",
      description:
        "–ö—É–¥–∞ –≤–µ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–ª–æ–∫–∞ —Å–æ–±—ã—Ç–∏—è. –ú–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º ‚Äî —Ç–æ–≥–¥–∞ –∫–Ω–æ–ø–∫–∞ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è.",
      fields: [
        {
          name: "href",
          title: "Link",
          type: "url",
          validation: (rule) =>
            rule
              .uri({ allowRelative: true, scheme: ["http", "https", "mailto", "tel"] })
              .warning(
                "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫—É. –ï—Å–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º ‚Äî –∫–Ω–æ–ø–∫–∞ –Ω–µ –ø–æ—è–≤–∏—Ç—Å—è –Ω–∞ —Å–∞–π—Ç–µ."
              ),
        },
        {
          name: "label",
          title: "Label",
          type: "object",
          fields: [
            { name: "ru", title: "Russian", type: "string", initialValue: "–ö–æ–Ω—Ç–∞–∫—Ç" },
            { name: "de", title: "German", type: "string", initialValue: "Kontakt" },
          ],
        },
      ],
    }),

    // –°–ª–∞–≥
    defineField({
      name: "slug",
      title: "Slug",
      type: "slug",
      options: { source: "title.de", maxLength: 96 },
    }),
  ],
});
